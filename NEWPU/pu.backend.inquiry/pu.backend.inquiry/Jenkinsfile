pipeline {
    agent any

    stages {
        stage('SonarQue Analysis') {
            when {
                expressin{
                    env.BRANCH_NAME == 'master'
                }
            }
            steps {
                script {
                    scannerHome = tool 'SonarQube Scanner' //must match the name of an actual scanner installation directory on you jenkins build agent
                }
                withSonarQubeEnv('SonarQube CE'){
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }

        stage('Build Docker Image') {
            when {
                expression {
                    env.BRANCH_NAME == 'master'
                }
            }
            steps {
                script {
                    // Build the project
                    sh 'docker login -u admin -p P@ssw0rd djkdevops001.jakarta.com:9031'
                    sh 'docker build --progress=plain -t pubackendinquiry:latest .'
                    sh 'docker stop pubackendinquiry'
                    sh 'docker rm pubackendinquiry'
                    sh 'docker run -it --restart=always -d --name pubbackendinquiry -p 5000:8080 pubackendinquiry:latest'
                }
            }
        }

        //stage('Test') {
        //    steps {
        //        script {
        //            // Run tests
        //            sh 'dotnet test --configuration Release'
        //        }
        //    }
        //}

        //stage('Publish') {
        //    steps {
        //        script {
        //            // Publish the application
        //            sh 'dotnet publish --configuration Release --output ./publish'
        //        }
        //    }
        //}
    }

    //post {
    //    always {
    //        // Archive the build artifacts
    //        archiveArtifacts artifacts: 'publish/**', allowEmptyArchive: true
    //    }
    //}
}
